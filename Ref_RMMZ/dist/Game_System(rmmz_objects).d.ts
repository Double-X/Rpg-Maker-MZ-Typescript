declare function Game_System(...args: any[]): void;
declare class Game_System {
    constructor(...args: any[]);
    initialize(): void;
    _saveEnabled: boolean;
    _menuEnabled: boolean;
    _encounterEnabled: boolean;
    _formationEnabled: boolean;
    _battleCount: number;
    _winCount: number;
    _escapeCount: number;
    _saveCount: number;
    _versionId: any;
    _savefileId: any;
    _framesOnSave: any;
    _bgmOnSave: {
        name: string;
        volume: number;
        pitch: number;
    } | {
        name: any;
        volume: any;
        pitch: any;
        pan: any;
        pos: any;
    };
    _bgsOnSave: {
        name: string;
        volume: number;
        pitch: number;
    } | {
        name: any;
        volume: any;
        pitch: any;
        pan: any;
        pos: any;
    };
    _windowTone: any;
    _battleBgm: any;
    _victoryMe: any;
    _defeatMe: any;
    _savedBgm: {
        name: string;
        volume: number;
        pitch: number;
    } | {
        name: any;
        volume: any;
        pitch: any;
        pan: any;
        pos: any;
    };
    _walkingBgm: any;
    isJapanese(): any;
    isChinese(): any;
    isKorean(): any;
    isCJK(): any;
    isRussian(): any;
    isSideView(): any;
    isAutosaveEnabled(): any;
    isSaveEnabled(): boolean;
    disableSave(): void;
    enableSave(): void;
    isMenuEnabled(): boolean;
    disableMenu(): void;
    enableMenu(): void;
    isEncounterEnabled(): boolean;
    disableEncounter(): void;
    enableEncounter(): void;
    isFormationEnabled(): boolean;
    disableFormation(): void;
    enableFormation(): void;
    battleCount(): number;
    winCount(): number;
    escapeCount(): number;
    saveCount(): number;
    versionId(): any;
    savefileId(): any;
    setSavefileId(savefileId: any): void;
    windowTone(): any;
    setWindowTone(value: any): void;
    battleBgm(): any;
    setBattleBgm(value: any): void;
    victoryMe(): any;
    setVictoryMe(value: any): void;
    defeatMe(): any;
    setDefeatMe(value: any): void;
    onBattleStart(): void;
    onBattleWin(): void;
    onBattleEscape(): void;
    onBeforeSave(): void;
    onAfterLoad(): void;
    playtime(): number;
    playtimeText(): string;
    saveBgm(): void;
    replayBgm(): void;
    saveWalkingBgm(): void;
    replayWalkingBgm(): void;
    saveWalkingBgm2(): void;
    mainFontFace(): string;
    numberFontFace(): string;
    mainFontSize(): any;
    windowPadding(): number;
}
