declare function Spriteset_Base(...args: any[]): void;
declare class Spriteset_Base {
    constructor(...args: any[]);
    constructor: typeof Spriteset_Base;
    initialize(): void;
    _animationSprites: any[];
    destroy(options: any): void;
    loadSystemImages(): void;
    createLowerLayer(): void;
    createUpperLayer(): void;
    update(): void;
    createBaseSprite(): void;
    _baseSprite: Sprite;
    _blackScreen: ScreenSprite;
    createBaseFilters(): void;
    _baseColorFilter: ColorFilter;
    createPictures(): void;
    _pictureContainer: Sprite;
    pictureContainerRect(): Rectangle;
    createTimer(): void;
    _timerSprite: Sprite_Timer;
    createOverallFilters(): void;
    filters: any[];
    _overallColorFilter: ColorFilter;
    updateBaseFilters(): void;
    updateOverallFilters(): void;
    updatePosition(): void;
    x: number;
    y: number;
    findTargetSprite(): any;
    updateAnimations(): void;
    processAnimationRequests(): void;
    createAnimation(request: any): void;
    createAnimationSprite(targets: any, animation: any, mirror: any, delay: any): void;
    isMVAnimation(animation: any): boolean;
    makeTargetSprites(targets: any): any[];
    lastAnimationSprite(): any;
    isAnimationForEach(animation: any): boolean;
    animationBaseDelay(): number;
    animationNextDelay(): number;
    animationShouldMirror(target: any): any;
    removeAnimation(sprite: any): void;
    removeAllAnimations(): void;
    isAnimationPlaying(): boolean;
}
