declare function Scene_Map(...args: any[]): void;
declare class Scene_Map {
    constructor(...args: any[]);
    constructor: typeof Scene_Map;
    initialize(): void;
    _waitCount: number;
    _encounterEffectDuration: number;
    _mapLoaded: boolean;
    _touchCount: number;
    _menuEnabled: any;
    create(): void;
    _transfer: any;
    _lastMapWasNull: boolean;
    isReady(): any;
    onMapLoaded(): void;
    onTransfer(): void;
    start(): void;
    menuCalling: boolean;
    onTransferEnd(): void;
    shouldAutosave(): boolean;
    update(): void;
    updateMainMultiply(): void;
    updateMain(): void;
    isPlayerActive(): boolean;
    isFastForward(): boolean;
    stop(): void;
    isBusy(): any;
    terminate(): void;
    needsFadeIn(): boolean;
    needsSlowFadeOut(): boolean;
    updateWaitCount(): boolean;
    updateDestination(): void;
    updateMenuButton(): void;
    hideMenuButton(): void;
    updateMapNameWindow(): void;
    isMenuEnabled(): boolean;
    isMapTouchOk(): any;
    processMapTouch(): void;
    isAnyButtonPressed(): any;
    onMapTouch(): void;
    isSceneChangeOk(): boolean;
    updateScene(): void;
    createDisplayObjects(): void;
    createSpriteset(): void;
    _spriteset: Spriteset_Map;
    createAllWindows(): void;
    createMapNameWindow(): void;
    _mapNameWindow: Window_MapName;
    mapNameWindowRect(): Rectangle;
    createButtons(): void;
    createMenuButton(): void;
    _menuButton: Sprite_Button;
    updateTransferPlayer(): void;
    updateEncounter(): void;
    updateCallMenu(): void;
    isMenuCalled(): boolean;
    callMenu(): void;
    updateCallDebug(): void;
    isDebugCalled(): any;
    fadeInForTransfer(): void;
    fadeOutForTransfer(): void;
    launchBattle(): void;
    stopAudioOnBattleStart(): void;
    startEncounterEffect(): void;
    updateEncounterEffect(): void;
    snapForBattleBackground(): void;
    startFlashForEncounter(duration: any): void;
    encounterEffectSpeed(): number;
}
